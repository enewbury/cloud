homeserver:
    address: http://synapse:8008
    domain: {{ cloud_server_fqdn }}
    software: standard
    status_endpoint: null
    message_send_checkpoint_endpoint: null
    async_media: false
    websocket: false
    ping_interval_seconds: 0

appservice:
    address: http://fb-bridge:29319
    hostname: 0.0.0.0
    port: 29319
    database:
        type: postgres
        uri: postgres://fb_bridge:{{ fb_bridge.db_pswd }}@postgres/fb_bridge?sslmode=disable
        max_open_conns: 20
        max_idle_conns: 2
        max_conn_idle_time: null
        max_conn_lifetime: null
    id: facebook
    bot:
        username: facebookbot
        displayname: Facebook bridge bot
        avatar: mxc://maunium.net/ygtkteZsXnGJLJHRchUwYWak
    ephemeral_events: true
    async_transactions: false
    as_token: "{{ fb_bridge.as_token }}"
    hs_token: "{{ fb_bridge.hs_token }}"

meta:
    mode: facebook
    ig_e2ee: false
    proxy:
    get_proxy_from:

bridge:
    username_template: {{ 'facebook_{{.}}' }}
    displayname_template: '{{ '{{or .DisplayName .Username \"Unknown user\"}} (FB)' }}'
    private_chat_portal_meta: always
    portal_message_buffer: 128
    personal_filtering_spaces: false
    bridge_notices: true
    delivery_receipts: true
    message_status_events: false
    message_error_notices: true
    disable_bridge_alerts: false
    sync_direct_chat_list: true
    resend_bridge_info: false
    caption_in_message: false
    federate_rooms: false
    mute_bridging: always
    double_puppet_server_map:
        example.com: https://example.com
    double_puppet_allow_discovery: false
    login_shared_secret_map:
        {{ cloud_server_fqdn }}: "as_token:{{ synapse.puppet_as_token }}"
    command_prefix: default
    backfill:
        enabled: true
        inbox_fetch_pages: 0
        history_fetch_pages: 0
        catchup_fetch_pages: 5
        unread_hours_threshold: 0
        queue:
            pages_at_once: 5
            max_pages: -1
            sleep_between_tasks: 20s
            dont_fetch_xma: true
    management_room_text:
        welcome: "Hello, I'm a Facebook bridge bot."
        welcome_connected: "Use `help` for help."
        welcome_unconnected: "Use `help` for help or `login` to log in."
        additional_help: ""
    encryption:
        allow: false
        default: false
        appservice: false
        require: false
        allow_key_sharing: false
        delete_keys:
            delete_outbound_on_ack: false
            dont_store_outbound: false
            ratchet_on_decrypt: false
            delete_fully_used_on_decrypt: false
            delete_prev_on_new_session: false
            delete_on_device_delete: false
            periodically_delete_expired: false
            delete_outdated_inbound: false
        verification_levels:
            receive: unverified
            send: unverified
            share: cross-signed-tofu
        rotation:
            enable_custom: false
            milliseconds: 604800000
            messages: 100
            disable_device_change_key_rotation: false
    provisioning:
        prefix: /_matrix/provision
        shared_secret: generate
        debug_endpoints: false
    permissions:
        "*": relay
        "{{ cloud_server_fqdn }}": user
        "{{ matrix_admin }}": admin
    relay:
        enabled: false
        admin_only: true
        message_formats:
            m.text: "{{ '{{ .Sender.Displayname }}: {{ .Message }}' }}"
            m.notice: "{{ '{{ .Sender.Displayname }}: {{ .Message }}' }}"
            m.emote: "* {{ '{{ .Sender.Displayname }} {{ .Message }}' }}"
            m.file: "{{ '{{ .Sender.Displayname }}' }} sent a file"
            m.image: "{{ '{{ .Sender.Displayname }}' }} sent an image"
            m.audio: "{{ '{{ .Sender.Displayname }}' }} sent an audio file"
            m.video: "{{ '{{ .Sender.Displayname }}' }} sent a video"
            m.location: "{{ '{{ .Sender.Displayname }}' }} sent a location"
logging:
    min_level: debug
    writers:
        - type: stdout
          format: pretty-colored
        - type: file
          format: json
          filename: ./logs/mautrix-meta.log
          max_size: 100
          max_backups: 10
          compress: true
