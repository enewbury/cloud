---
# tasks file to start turnserver container
- name: ensures photoprism dir exists
  file:
    path: "{{ cloud_base_dir }}/photoprism/"
    state: directory
    owner: root
    group: root

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the photoprism container"
  docker_container:
    name: "photoprism"
    image: "photoprism/photoprism:latest"
    restart_policy: "unless-stopped"
    security_opts:
      - "seccomp:unconfined"
      - "apparmor:unconfined"
    volumes:
      - "{{ cloud_base_dir }}/photoprism:/photoprism/storage"
      - "{{ nextcloud_data_dir }}/{{ nextcloud_photos_dir }}:/photoprism/originals"
    env:
      PHOTOPRISM_ADMIN_PASSWORD: "{{ nextcloud_passwd }}"
      PHOTOPRISM_SITE_URL: "https://photos.***REMOVED***"
      PHOTOPRISM_PUBLIC: "false"                     # no authentication required (disables password protection)
      PHOTOPRISM_READONLY: "true"                   # don't modify originals directory (reduced functionality)
      PHOTOPRISM_DETECT_NSFW: "false"                # flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive
      PHOTOPRISM_SPONSOR: "true"
      PHOTOPRISM_DATABASE_DRIVER: "sqlite"           # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_SITE_TITLE: "NewburyPhotos"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: "Eric Newbury"
    networks:
      - name: backend
    labels:
      traefik.enable: "true"
      traefik.http.routers.photoprism.entrypoints: "web-secure"
      traefik.http.routers.photoprism.rule: "Host(`photos.{{ cloud_server_fqdn }}`)"
      traefik.http.routers.photoprism.service: photoprism
      traefik.http.services.photoprism.loadbalancer.server.port: "2342"
      com.centurylinklabs.watchtower.enable: "true"

    state: '{{ state | default("started") }}'
