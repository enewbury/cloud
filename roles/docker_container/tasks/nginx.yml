---
# tasks file to start nginx container

- name: copy uploadsize.conf to {{ nextcloud_config_dir }}
  copy:
    src:  'uploadsize.conf'
    dest: '{{ cloud_nginx_dir }}/uploadsize.conf'
    owner: 'root'
    group: 'root'
    mode:  0644

- name: copy nginx.conf
  template:
    src:  'nginx.conf.j2'
    dest: '{{ cloud_nginx_dir }}/nginx.conf'
    owner: 'root'
    group: 'root'
    mode:  0644

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the nginx container"
  docker_container:
    name: nginx
    image: nginx:{{ docker_nginx_image | default('latest') }}
    restart_policy: always
    networks:
      - name: backend
    networks_cli_compatible: true
    volumes:
      - "{{ cloud_nginx_dir }}/nginx.conf:/etc/nginx/nginx.conf"
      - "{{ cloud_nginx_dir }}/uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf"
    volumes_from:
      - nextcloud
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx.entrypoints: "web-secure"
      traefik.http.routers.nginx.rule: "Host(`{{ cloud_server_fqdn }}`)"
      traefik.http.routers.nginx.middlewares: "nextcloud@file,nextcloud-redirect@file"
      traefik.http.routers.nginx.service: "nginx"
      traefik.http.services.nginx.loadbalancer.server.port: "80"
      com.centurylinklabs.watchtower.enable:            "true"
    state: "{{ state | default('started') }}"
  register: docker_result
