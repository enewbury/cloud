---
# tasks file to start nginx container

- name: copy uploadsize.conf to {{ nextcloud_config_dir }}
  copy:
    src: "uploadsize.conf"
    dest: "{{ cloud_nginx_dir }}/uploadsize.conf"
    owner: "root"
    group: "root"
    mode: 0644

- name: copy nginx.conf
  template:
    src: "nginx.conf.j2"
    dest: "{{ cloud_nginx_dir }}/nginx.conf"
    owner: "root"
    group: "root"
    mode: 0644

- name: copy static matrix client
  template:
    src: "matrix-client.json.j2"
    dest: "{{ cloud_nginx_dir }}/static/matrix/client.json"
    owner: "root"
    group: "root"

- name: copy static matrix server
  template:
    src: "matrix-server.json.j2"
    dest: "{{ cloud_nginx_dir }}/static/matrix/server.json"
    owner: "root"
    group: "root"

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the nginx container"
  docker_container:
    name: nginx
    image: nginx:{{ docker_nginx_image | default('latest') }}
    restart_policy: always
    networks:
      - name: backend
    networks_cli_compatible: true
    volumes:
      - "{{ cloud_nginx_dir }}/nginx.conf:/etc/nginx/nginx.conf"
      - "{{ cloud_nginx_dir }}/uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf"
      - "{{ cloud_nginx_dir }}/static/:/var/www/static/"
    volumes_from:
      - nextcloud
    labels:
      traefik.enable: "true"
      traefik.http.routers.nginx.entrypoints: "web-secure"
      traefik.http.routers.nginx.rule: "Host(`{{ cloud_server_fqdn }}`)"
      traefik.http.routers.nginx.middlewares: "nextcloud@file,matrix-redirect@file"
      traefik.http.routers.nginx.service: "nginx"
      traefik.http.services.nginx.loadbalancer.server.port: "80"
      com.centurylinklabs.watchtower.enable: "true"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://nginx/status.php || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
    state: "{{ state | default('started') }}"
  register: docker_result
