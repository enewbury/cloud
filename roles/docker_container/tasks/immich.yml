
---
- name: ensures immich dir exists
  file:
    path: "{{ cloud_base_dir }}/immich"
    state: directory
    owner: root
    group: root

- name: 'immich | create postgres volume'
  docker_volume:
    name: 'immich-postgres-14-vol'
    state: present

- name: 'immich | create model cache volume'
  docker_volume:
    name: 'immich-model-cache'
    state: present

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the immich postgres container"
  docker_container:
    name: immich_db
    image: "ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:41eacbe83eca995561fe43814fd4891e16e39632806253848efaf04d3c8a8b84"
    restart_policy: unless-stopped
    env:
      POSTGRES_USER: immich
      POSTGRES_PASSWORD: "{{ immich_db_pswd }}"
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    networks:
      - name: backend
    networks_cli_compatible: true
    volumes:
      - "immich-postgres-14-vol:/var/lib/postgresql/data"
    state: "{{ state | default('started') }}"

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the immich server container"
  docker_container:
    name: immich_server
    image: "ghcr.io/immich-app/immich-server:{{ docker_immich_image }}"
    restart_policy: unless-stopped
    volumes:
      - "{{ cloud_base_dir }}/immich:/data"
      - /etc/localtime:/etc/localtime:ro
    env:
      DB_USERNAME: immich
      DB_HOSTNAME: immich_db
      DB_DATABASE_NAME: immich
      DB_PASSWORD: "{{ immich_db_pswd }}"
      REDIS_PASSWORD: "{{ redis_secret }}"
    networks:
      - name: backend
    labels:
      traefik.enable: "true"
      traefik.http.routers.immich.entrypoints: "web-secure"      
      traefik.http.routers.immich.rule: "Host(`photos.{{ cloud_server_fqdn }}`)"
      traefik.http.routers.immich.service: immich
      traefik.http.services.immich.loadbalancer.server.port: "2283"

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the immich ML container"
  docker_container:
    name: immich_machine_learning
    image: "ghcr.io/immich-app/immich-machine-learning:{{ docker_immich_image }}"
    restart_policy: unless-stopped
    volumes:
      - "immich-model-cache:/cache"
    networks:
      - name: backend
