---
# tasks file to start nextcloud container

- name: check if config.php exists
  stat:
    path: "{{ nextcloud_config_dir }}/config.php"
  register: config_php

- name: copy php.ini to {{ nextcloud_config_dir }}
  copy:
    src:  "php.ini"
    dest: "{{ nextcloud_config_dir }}/php.ini"
    owner: "{{ 82 if ( 'alpine' in docker_nextcloud_image ) else 33 }}" 
    group: "{{ 82 if ( 'alpine' in docker_nextcloud_image ) else 33 }}" 
    mode: 0644

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the nextcloud container"
  docker_container:
    name:           nextcloud
    image:          nextcloud:{{ docker_nextcloud_image | default('latest') }}
    restart_policy: always
    networks:
      - name: backend
    networks_cli_compatible: true
    volumes:
      - "{{ nextcloud_www_dir }}:/var/www/html"
      - "{{ nextcloud_config_dir }}:/var/www/html/config"
      - "{{ nextcloud_data_dir }}:{{ nextcloud_container_data_dir }}"
      - "{{ nextcloud_config_dir }}/php.ini:/usr/local/etc/php/php.ini"
    labels:
      traefik.enable: "true"
      traefik.http.routers.cloud.entrypoints: "web-secure"
      traefik.http.routers.cloud.rule: "Host(`{{ cloud_server_fqdn }}`)"
      traefik.http.routers.cloud.middlewares: "nextcloud@file"
      traefik.http.routers.cloud.service: "cloud"
      traefik.http.services.cloud.loadbalancer.server.port: "80"
      com.centurylinklabs.watchtower.enable: "true"
      com.centurylinklabs.watchtower.depends-on: "redis,cloud-db"
    state: "{{ state | default('started') }}"
  register: docker_result
    
- name: wait for nextcloud container to come up
  wait_for:
#    delay: 10
    path: "{{ nextcloud_www_dir }}/lib/versioncheck.php"
  when: 
    - docker_result is changed
    - ( state is undefined or 'absent' not in state )
