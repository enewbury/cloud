---
# tasks file for docker_traefik

- name: check if rules file exists
  stat: 
    path: "{{ traefik_config_dir }}/acme.json"
  register: acme_file

- name: creats acme.json file exists
  file:
    path: "{{ traefik_config_dir }}/acme.json"
    state: touch
    owner: root
    group: root
    mode: 0600
  changed_when: not acme_file.stat.exists

- name: adding traefik.yaml file
  template:
    src: traefik.yaml.j2
    dest: "{{ traefik_config_dir }}/traefik.yaml"
    owner: root
    group: root

- name: adding dynamic.yaml file
  template:
    src: dynamic.yaml.j2
    dest: "{{ traefik_config_dir }}/dynamic.yaml"
    owner: root
    group: root

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the traefik container"
  docker_container:
    name: traefik
    image: traefik:{{ docker_traefik_image | default('latest') }}
    restart_policy: unless-stopped
    networks:
      - name: backend
      - name: traefik
      - name: dockerproxy
    networks_cli_compatible: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{ traefik_config_dir }}/traefik.yaml:/traefik.yaml"
      - "{{ traefik_config_dir }}/dynamic.yaml:/dynamic.yaml"
      - "{{ traefik_config_dir }}/acme.json:/acme.json"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    state: "{{ state | default('started') }}"
  register: traefik_facts
