#!/bin/bash

export RESTIC_REPOSITORY="{{ restic_repo }}"
export RESTIC_PASSWORD="{{ restic_backup_secret }}"

# abort entire script if any command fails
set -e

# unlock restic to keep automatic backups going
{{ restic_install_path }}/restic unlock --cleanup-cache

# Make sure nextcloud is enabled when we are done
trap "docker exec -u www-data nextcloud php occ maintenance:mode --off && curl -H tag:warning -H p:low -u admin:{{ ntfy_alerts_pswd }} -d \"Cloud backup failed\" https://ntfy.{{ cloud_server_fqdn }}/alerts" EXIT

# set nextcloud to maintenance mode
docker exec -u www-data nextcloud php occ maintenance:mode --on

sudo docker exec postgres pg_dump -c -U postgres nextcloud > {{ cloud_database_dump_dir }}/postgres_dump_nextcloud.sql
sudo docker exec postgres pg_dump -c -U postgres synapse > {{ cloud_database_dump_dir }}/postgres_dump_synapse.sql
sudo docker exec postgres pg_dump -c -U postgres fb_bridge > {{ cloud_database_dump_dir }}/postgres_dump_fb_bridge.sql

# backup the data dir
{{ restic_install_path }}/restic backup --verbose {{ cloud_base_dir }}

#
# end maintenance mode
docker exec -u www-data nextcloud php occ maintenance:mode --off

# delete trap
trap "" EXIT


# clean up backup dir
{{ restic_install_path }}/restic forget --keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75
{{ restic_install_path }}/restic prune
